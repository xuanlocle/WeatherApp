plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def apiKey = localProperties.getProperty('API_KEY')
if (apiKey == null) {
    apiKey = ''
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.xuanlocle.weatherapp"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'HOST', "\"https://api.openweathermap.org/data/2.5/\"")
            buildConfigField('String', 'API_KEY', apiKey.toString())
        }
        debug {
            debuggable true
            minifyEnabled false
            buildConfigField('String', 'HOST', "\"https://api.openweathermap.org/data/2.5/\"")
            buildConfigField('String', 'API_KEY', apiKey.toString())

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions 'environment'
    productFlavors {
        dev {
            dimension 'environment'
            applicationId 'com.xuanlocle.weatherapp.dev'
        }
        qa {
            dimension 'environment'
            applicationId 'com.xuanlocle.weatherapp'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Gson
    implementation "com.google.code.gson:gson:2.8.6"

    def room_version = "2.3.0"
    def kodein_version = "6.4.0"
    def lifecycle_version = "2.0.0"
    def retrofit_version = "2.9.0"
    def okHttp_version = "4.9.0"
    def multidex_version = "2.0.1"
    def mock_version = "1.9.2"

    implementation "androidx.multidex:multidex:$multidex_version"


    // Room and Architectural Components
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "androidx.room:room-ktx:2.3.0"
    kapt "androidx.room:room-compiler:$room_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"

    // New Material Design
    implementation "com.google.android.material:material:1.4.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Kodein
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-android-x:$kodein_version"

    /* Retrofit using RxJava2, OkHttp logging interceptor, GSon  */
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'


    /* Test*/
    testImplementation "io.mockk:mockk:$mock_version"
    androidTestImplementation "io.mockk:mockk-android:$mock_version"
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

}